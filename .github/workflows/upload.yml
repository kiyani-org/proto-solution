name: 'upload'

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'

permissions:
  contents: 'read'
  id-token: 'write'

concurrency:
  group: 'upload-${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: false

env:
  PROJECT_ID: 'shankiyani-dev-95'
  WIF_PROVIDER: 'projects/537890254076/locations/global/workloadIdentityPools/github-automation/providers/gh-automation'
  WIF_SERVICE_ACCOUNT: 'github-automation-bot@shankiyani-dev-95.iam.gserviceaccount.com'

  GO_VERSION: '1.21.1'
  GO_GAR_REPOSITORY_NAME: 'proto-go'
  GO_GAR_REPOSITORY_LOCATION: 'us'
  GO_MODULE_PATH: 'github.com/kiyani-org/proto-solution'

  NODE_VERSION: '20.11.1'
  NODE_GAR_REPOSITORY_NAME: 'proto-node'
  NODE_GAR_REPOSITORY_LOCATION: 'us-central1'

jobs:
  ci:
    uses: './.github/workflows/ci.yml'
    permissions:
      contents: 'read'
      id-token: 'write'

  create_artifact:
    needs:
      - 'ci'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - uses: actions/upload-artifact@v4 # ratchet:actions/upload-artifact@v4
        with:
          name: '${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          path: 'gen'
          if-no-files-found: 'error'
          retention-days: 3

  deploy_go:
    needs:
      - 'ci'
      - 'create_artifact'
    runs-on: 'ubuntu-latest'
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@3a3c4c57d294ef65efaaee4ff17b22fa88dd3c69' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200' # ratchet:google-github-actions/setup-gcloud@v2
        with:
          install_components: 'package-go-module'

      - name: 'Setup Go'
        uses: 'actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe' # ratchet:actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: 'Download gen artifact'
        uses: actions/download-artifact@v4  # ratchet:actions/download-artifact@v4
        with:
          path: 'gen'
          pattern: '${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          merge-multiple: true

      - name: 'Upload to go GAR'
        env:
          # version must be prefixed with vX.Y.Z https://cloud.google.com/artifact-registry/docs/go/store-go#package_and_upload_your_module
          # the sha suffix is easily associate a commit with a version.
          VERSION: 'v${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          GO_GEN_PROTOS_DIRECTORY: 'gen/go'
        run: |-
          tree gen
          gcloud artifacts go upload \
          --module-path=${{ env.GO_MODULE_PATH }} \
          --project=${{ env.PROJECT_ID }} \
          --location=${{ env.GO_GAR_REPOSITORY_LOCATION }} \
          --repository=${{ env.GO_GAR_REPOSITORY_NAME }} \
          --source=$GO_GEN_PROTOS_DIRECTORY \
          --version=$VERSION

  deploy_npm:
    needs:
      - 'ci'
      - 'create_artifact'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@3a3c4c57d294ef65efaaee4ff17b22fa88dd3c69' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Setup node'
        uses: 'actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8' # ratchet:actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
      
      - name: 'Upload to Node GAR'
        env: 
          VERSION: 'v${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          ES_GEN_PROTOS_DIRECTORY: './gen/es'
        run: |-
          cd $ES_GEN_PROTOS_DIRECTORY
          npm run artifactregistry-login
          npm publish
